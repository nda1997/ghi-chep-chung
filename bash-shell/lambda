import boto3
import os
import json
import base64

# Clients
ec2 = boto3.client('ec2')
ses = boto3.client('ses')
kms = boto3.client('kms')

# Environment variables
EMAIL_RECIPIENT = os.environ['EMAIL_RECIPIENT']
EMAIL_SENDER = os.environ['EMAIL_SENDER']
KMS_KEY_ID = os.environ['KMS_KEY_ID']  # KMS Key ID for encryption

def lambda_handler(event, context):
    alert_messages = []

    # Get list of subnets
    response = ec2.describe_subnets()
    subnets = response['Subnets']

    for subnet in subnets:
        subnet_id = subnet['SubnetId']
        available_ips = subnet['AvailableIpAddressCount']
        cidr_block = subnet['CidrBlock']
        
        if available_ips < 10:
            alert_messages.append(
                f"Subnet {subnet_id} ({cidr_block}) chỉ còn {available_ips} IP available."
            )

    if alert_messages:
        alert_body = "\n".join(alert_messages)

        # Encrypt message using KMS
        encrypted_response = kms.encrypt(
            KeyId=KMS_KEY_ID,
            Plaintext=alert_body.encode('utf-8')
        )
        encrypted_message = base64.b64encode(encrypted_response['CiphertextBlob']).decode('utf-8')

        # Send email using SES
        ses.send_email(
            Source=EMAIL_SENDER,
            Destination={'ToAddresses': [EMAIL_RECIPIENT]},
            Message={
                'Subject': {'Data': '⚠️ Cảnh báo Subnet sắp hết IP'},
                'Body': {
                    'Text': {
                        'Data': f"Nội dung đã mã hóa:\n\n{encrypted_message}"
                    }
                }
            }
        )

    return {
        'statusCode': 200,
        'body': json.dumps('Done checking subnets')
    }



{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "ec2:DescribeSubnets",
        "kms:Encrypt",
        "ses:SendEmail"
      ],
      "Resource": "*"
    }
  ]
}
